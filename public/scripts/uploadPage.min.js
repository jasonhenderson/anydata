/*!
 * AnyData -  v1.0.0 (https://github.com/jasonhenderson/anydata.git)
 * Copyright 2016-2017 Jason Henderson
 * Licensed under GPLV3 (https://www.gnu.org/licenses/gpl-3.0.html)
 */
function setProgress(e){"undefined"==typeof e?($(".progress").hide(),e=0):$(".progress").show(),$(".progress-bar").css("width",+e+"%"),$(".progress-bar").text(e+"%")}function showFileInputAlert(e){$("#fileInputAlert > span").html(e),$("#fileInputAlert").show()}function clearFileInputAlert(){$("#fileInputAlert > span").html(""),$("#fileInputAlert").hide()}function showUploadAlert(e){$("#uploadAlert > span").html(e),$("#uploadAlert").show()}function clearUploadAlert(){$("#uploadAlert > span").html(""),$("#uploadAlert").hide()}$(function(){clearFileInputAlert(),$("#fileInputButton").click(function(){clearFileInputAlert(),$("#fileInput").trigger("click")}),$("#fileInput").change(function(){if(!window.FileReader)return showFileInputAlert("FileReader API is not supported by your browser.");var e=$(this)[0];if(e.files&&e.files[0]){var t=e.files[0],l=new FileReader;l.onload=function(){try{var e=JSON.stringify(JSON.parse(l.result),null,4);$("#jsonDataText").val(e)}catch(t){showFileInputAlert("Error reading file")}},l.readAsText(t)}else showFileInputAlert("File not selected or browser incompatible.")}),clearUploadAlert(),setProgress(),$("#uploadButton").click(function(e){setProgress(),clearUploadAlert();var t=new FormData($("form")[0]);$.ajax({url:"/upload",type:"POST",data:t,processData:!1,contentType:!1,mimeType:"multipart/form-data",cache:!1,xhr:function(){var e=$.ajaxSettings.xhr();return e.upload&&e.upload.addEventListener("progress",function(e){var t=0,l=e.loaded||e.position,o=e.total;e.lengthComputable&&(t=Math.ceil(l/o*100)),setProgress(t)},!0),e}}).done(function(e){console.log("upload done"),console.log(e)}).fail(function(e){setProgress(),showUploadAlert(JSON.parse(e.responseText).message),console.log("upload failed"),console.log(e)}).always(function(){})})});